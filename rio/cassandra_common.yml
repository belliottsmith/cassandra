commands:
- name: Determine Tests to Run
  timeout: PT15M
  command: |
    set -x
    set -e
    set -o pipefail

    bash -c "find 'test/$CASSANDRA_TEST_KIND' -name '*Test.java' ${SPLIT_FILTER:-}" | sed "s;^test/$CASSANDRA_TEST_KIND/;;g" > "$PARALLEL_OUTPUT_DIR/splits"

- name: Run Tests (testclasslist)
  noOutputTimeout: PT15M
  command: |
    set -x
    #NOTE : set -e and pipefail were intentionally removed to make sure the copy commands at the end get executed even when tests fail

    JAVA_VERSION=$(java -version 2>&1 | awk -F '"' '/version/ {print $2}' | awk -F. '{print $1}')

    if [ "$JAVA_VERSION" -ge 11 ]; then
      export CASSANDRA_USE_JDK11=true
    fi

    test_timeout=$(grep "name=\"test.${CASSANDRA_TEST_KIND}.timeout\"" build.xml | awk -F'"' '{print $4}' || true)
    if [ -z "$test_timeout" ]; then
      test_timeout=$(grep 'name="test.timeout"' build.xml | awk -F'"' '{print $4}')
    fi

    eval "${BEFORE_TEST:-}"
    ant testclasslist -Dtest.timeout="$test_timeout" -Dtest.classlistfile=$PARALLEL_INPUT_DIR/input  -Dtest.classlistprefix=$CASSANDRA_TEST_KIND

    if [ -e build/test/output ]; then
      mkdir -p $PARALLEL_OUTPUT_DIR/build/test/output
      cp -r build/test/output/* $PARALLEL_OUTPUT_DIR/build/test/output/
    fi
    if [ -e build/test/logs ]; then
      mkdir -p $PARALLEL_OUTPUT_DIR/build/test/logs
      cp -r build/test/logs/* $PARALLEL_OUTPUT_DIR/build/test/logs/
    fi
- name: Build dtest jar
  timeout: PT15M
  command: |
    set -x
    set -e
    set -o pipefail

    JAVA_VERSION=$(java -version 2>&1 | awk -F '"' '/version/ {print $2}' | awk -F. '{print $1}')
    if [ "$JAVA_VERSION" -ge 11 ]; then
      export CASSANDRA_USE_JDK11=true
    fi
  
    # because the context filters out the build dir, the dtest jars are in dtest_jars directory
    # but currently they are required to be in build to be picked up; so copy there
    # TODO change behavior once (CASSANDRA-15489 - Allow end-user to configure dtest jar path) is in
    ant realclean
    mkdir build
    if [[ -e dtest_jars ]]; then
      cp dtest_jars/* build/
    fi

    ant dtest-jar

# Rio seems to allow network access to maven central but k8s won't.
# rather than patching cie-cassandra this will apply the patch in CI instead
- name: Patch for internal networking
  command: |
    cat <<EOF > build.properties.default
    # Maven2 Repository Locations (you can override these in "build.properties" to point to a local proxy, e.g. Nexus)
    artifact.remoteRepository.central:     https://artifacts.apple.com/libs-release
    artifact.remoteRepository.apache:      https://artifacts.apple.com/libs-release
    maven-ant-tasks.url:                   https://artifacts.apple.com/libs-release/org/apache/maven/maven-ant-tasks
    EOF
