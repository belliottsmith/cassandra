---
# yamllint disable rule:line-length
#
# Cassandra Rio configuration
#
# Creates the following pipelines
#  * ghprb-<branch>-prb            -- Pull request builder - triggered on creation/update of PR
#  * snapshot-<branch>-publish     -- Publishes snapshot builds whenever the branch is updated
#  * release-<branch>-publish      -- MANUALLY TRIGGERED to create and publish release jars,
#                                     tarballs, docker images and carnival packages.
#
# Build/test from ghprb uses parallelci to run the tests, unit results are collected and
# presented to rio so it could upload to Quality
#
# The version of the build is determined from the contents of the CIE-VERSION file (previously
# it was hardcoded in the build script on each branch, but moving it to a separate file
# allows the same Rio config to be used across all branches with branchRule whitelisting).
# It holds the last released version of the branch and optionally a custom suffix for
# experimental builds, e.g. 3.0.19.0-ndeepq.  The snapshot builds the 'next' suffix is supplied
# if no custom suffix is provided.
#
#### VERSIONING
#
# From CIE-VERSION a couple of scripts are used to parse out the versions needed by various
# different packaging systems.
#
# FULL_VERSION includes any custom version suffix.
#
# ARTIFACTS_VERSION for releases, is just the base version, for snapshots is the base version
# with -snapshot appended.  This is the version supplied to base.version in {rio-,}build.xml
# and controls the version used in the build artifacts step for jars, tarballs and the docker image
# (i.e. cie-cassandra-<base_version>-bin.tar.gz and lib/cie-cassandra-<base_version>.jar)
#
# STUB_VERSION holds the version of cassandrastub, calculated by the rio/stub-version.sh script
#
# CARNIVAL_VERSION_NAME holds the carnival-compatible version name converting from numerals
# to textual versions.
#
# DOCKER_IMAGE_VERSION holds the full version number for the docker image.  For releases
# that is just FULL_VERSION, for snapshots an auto incrementing number is appended on top of
# the full version (e.g. 4.0.0-next.32). Snapshot containers are also tagged with
# the full version 4.0.0-next so the most recent build of the branch can be easily found.
#
#### TESTS
#
# The current tests that are run on builds are controlled from the parallelci config
# in rio/unittests.yml
#
schemaVersion: '2.0'

# Turn off Email/Slack notifications by default for pipelines.
notify:
  email:
    enabled: false
  slack:
    enabled: false

branchRules:
  whitelist:
    - 'cie-cassandra-(?<version>4(\.\d+)*)(-(?<variant>\w+))?'

builds:
  #
  # Pull request builder
  #
  - &prb_unit
    group: ghprb
    jenkins:
      concurrentBuild: true
      throttlingEnabled: true
      maxConcurrentTotal: 2
    machine:
      baseImage: docker.apple.com/piedb/parallelci:latest
    secrets:
      names:
        - k8s_auth_token
        - k8s_auth_token.us-west-1a
        - mcqueen.yml
    build:
      template: freestyle:v4:prb
      steps:
        - ./rio/parallel-tests-step.sh unit
    timeout: 180
    reports:
      junit:
        paths:
          - parallel-output/**/build/test/output/*
      logs:
        paths:
          - unified-output/**/build/test/logs/**/*
          - parallel-output/**/*

  - <<: *prb_unit
    group: ghprb-jvm-dtest
    build:
      template: freestyle:v4:prb
      steps:
        - ./rio/parallel-tests-step.sh jvm-dtest

  - <<: *prb_unit
    group: ghprb-jvm-dtest-upgrade
    build:
      template: freestyle:v4:prb
      steps:
        - ./rio/parallel-tests-step.sh jvm-dtest-upgrade

  - <<: *prb_unit
    group: ghprb-jvm-dtest-fuzz
    build:
      template: freestyle:v4:prb
      steps:
        - ./rio/parallel-tests-step.sh jvm-dtest-fuzz

  #
  # Pull request builder triggering python dtests
  #
  - group: ghprb-python-dtest
    jenkins:
      concurrentBuild: true
      throttlingEnabled: true
      maxConcurrentTotal: 2
    machine:
      baseImage: docker.apple.com/piedb/parallelci:latest
    secrets:
      names:
        - rio-env.sh
        - k8s_auth_token
        - k8s_auth_token.us-west-1a
        - mcqueen.yml
    build:
      template: freestyle:v4:prb
      steps:
        - rio/parallel-python-dtests-step.sh
    timeout: 180
    reports:
      junit:
        trim: false
      logs:
        paths:
          - parallel-output/**/*
    finally:
      radar:
        annotate: false
      tag:
        enabled: false


  #
  # Snapshot build - runs automatically on commit
  #
  - group: snapshot
    jenkins:
      concurrentBuild: true
      throttlingEnabled: true
      maxConcurrentTotal: 2
    trigger:
      gitPush: true
    machine:
      baseImage: docker.apple.com/piedb/parallelci:latest
      env:
        CIE_VERSION: '$(./rio/cie-version.sh)'
        FULL_VERSION: '$(./rio/version-tool.sh snapshot ${GIT_BRANCH} ${CIE_VERSION})'
        STUB_VERSION_NAME: '$(./rio/stub-version.sh ${FULL_VERSION})'
        ARTIFACTS_VERSION: '${FULL_VERSION}'
        CARNIVAL_APP_NAME: '$(./rio/carnival-compatible-name.sh ${FULL_VERSION})'
        CARNIVAL_BUILD_VERSION: '1BUILD#{}'
        STUB_JAR: '/work/cassandrastub${STUB_VERSION_NAME}/cassandrastub${STUB_VERSION_NAME}.jar'
        DOCKER_IMAGE_VERSION: '${FULL_VERSION}.#{${FULL_VERSION}}'
        DOCKER_IMAGE_BRANCH_TAG: '$(echo "$GIT_BRANCH" | sed "s;cie-cassandra-;;g")-latest'
    secrets:
      names:
        - k8s_auth_token
        - k8s_auth_token.us-west-1a
        - mcqueen.yml
    build:
      template: freestyle:v4:publish
      steps:
        - ant -f rio-build.xml jar
        - ./rio/parallel-tests-step.sh
        - ./rio/release.sh ${ARTIFACTS_VERSION}
        - ./rio/carnival-build.sh ${FULL_VERSION} ${CARNIVAL_APP_NAME} ${CARNIVAL_BUILD_VERSION}
    # timeout also set for parallelci command in rio/parallel-test-step.sh
    # and in rio/unittests.yml (although not currently implemented)
    timeout: 180
    reports:
      junit:
        paths:
          - parallel-output/**/build/test/output/*
      logs:
        paths:
          - unified-output/**/build/test/logs/**/*
          - parallel-output/**/*
    package:
      release: false
      carnival:
        - version: "${CARNIVAL_BUILD_VERSION}"
          projectName: CIEDb
      freeform:
        - version: '${FULL_VERSION}'
          publish:
            - repo: m2:cie
      dockerfile:
        - dockerfilePath: "Dockerfile"
          version: "${DOCKER_IMAGE_VERSION}"
          perApplication: false
          extraTags:
            - "${FULL_VERSION}"
            - "${DOCKER_IMAGE_BRANCH_TAG}"
          publish:
            - repo: docker.apple.com/piedb_ci/cie-cassandra
    finally:
      tag:
        enabled: true
        expression: ${GIT_BRANCH}-snapshot-${RIO_BUILD_NUMBER}
      notify: &notify
        email:
          enabled: true
          recipients:
            - 'aci-cassandra-build@group.apple.com'
        slack:
          # The docs do not say you need to do this, but notifications didn't happen...
          enabled: true
          channels:
            - channel: '#aci-cassandra-e2e'
              build:
                onStart: false
                onSuccess: false
                onFailure: true

  #
  # Snapshot build - runs python dtests, but does not public artifacts
  #
  - group: snapshot-python-dtest
    jenkins:
      concurrentBuild: true
      throttlingEnabled: true
      maxConcurrentTotal: 2
    trigger:
      gitPush: true
    machine:
      baseImage: docker.apple.com/piedb/parallelci:latest
    secrets:
      names:
        - k8s_auth_token
        - k8s_auth_token.us-west-1a
        - mcqueen.yml
    build:
      template: freestyle:v4:build
      steps:
        - rio/parallel-python-dtests-step.sh
    timeout: 180
    reports:
      # junit doesn't need to change path as the build copies the results to the expected location,
      # other builds need to avoid conflict, so do not copy, but python-dtest files are
      # named after the worker, so no conflict
      junit:
        trim: false
      logs:
        paths:
          - parallel-output/**/*
    finally:
      tag:
        enabled: false
      notify:
        <<: *notify

  #
  # Release Build - must be started manually
  #
  - group: release
    trigger:
      gitPush: false
    checkout:
      fetchTags: true
    machine:
      baseImage: docker.apple.com/piedb/parallelci:latest
      env:
        CIE_VERSION: '$(./rio/cie-version.sh)'
        FULL_VERSION: '$(./rio/version-tool.sh release ${GIT_BRANCH} ${CIE_VERSION})'
        STUB_VERSION_NAME: '$(./rio/stub-version.sh ${FULL_VERSION})'
        ARTIFACTS_VERSION: '${FULL_VERSION}'
        CARNIVAL_APP_NAME: '$(./rio/carnival-compatible-name.sh ${FULL_VERSION})'
        CARNIVAL_BUILD_VERSION: '1BUILD#{}'
        STUB_JAR: '/work/cassandrastub${STUB_VERSION_NAME}/cassandrastub${STUB_VERSION_NAME}.jar'
        DOCKER_IMAGE_VERSION: '${FULL_VERSION}'
        SSH_AUTH_SOCK: "$( echo $SSH_AUTH_SOCK_DEPLOY_KEY )"
        CIE_TARGET_IF1_CLUSTERS: '$(./rio/cie-target-if1-clusters.sh)'

    secrets:
      names:
        - k8s_auth_token
        - k8s_auth_token.us-west-1a
        - mcqueen.yml
    build:
      template: freestyle:v4:publish
      steps:
        - ant -f rio-build.xml jar
        - ./rio/parallel-tests-step.sh
        - ./rio/release.sh ${ARTIFACTS_VERSION}
        - ./rio/carnival-build.sh ${FULL_VERSION} ${CARNIVAL_APP_NAME} ${CARNIVAL_BUILD_VERSION}
        - ./rio/bump-release-version.sh
    # timeout also set for parallelci command in rio/parallel-test-step.sh
    # and in rio/unittests.yml (although not currently implemented) and
    # the mapper ant task
    timeout: 180
    reports:
      junit:
        paths:
          - parallel-output/**/build/test/output/*
      logs:
        paths:
          - unified-output/**/build/test/logs/**/*
          - parallel-output/**/*
    package:
      release: true
      carnival:
        - version: "${CARNIVAL_BUILD_VERSION}"
          projectName: CIEDb
      freeform:
        - version: '${FULL_VERSION}'
          publish:
            - repo: m2:cie
      dockerfile:
        - dockerfilePath: "Dockerfile"
          version: "${DOCKER_IMAGE_VERSION}"
          perApplication: false
          publish:
            - repo: docker.apple.com/piedb/cie-cassandra
      mirror:
        target: silkroad
        artifactPackageFilters: []
    finally:
      notify:
        <<: *notify
      tag:
        enabled: false
      pipelineChain:
        - pipeline: cassinfra40-publish
          buildArguments:
            - name: "CASSANDRA_VERSION"
              value: "${FULL_VERSION}"
          project: pie-cassandra-test-infra-docker
        - pipeline: if1-release
          buildArguments:
            - name: "CARNIVAL_APP_NAME"
              value: "${CARNIVAL_APP_NAME}"
            - name: "CARNIVAL_BUILD_VERSION"
              value: "${CARNIVAL_BUILD_VERSION}"
            - name: "GIT_COMMITTER_EMAIL"
              value: "${GIT_COMMITTER_EMAIL}"
            - name: "CIE_VERSION"
              value: "${CIE_VERSION}"
            - name: "CIE_TARGET_IF1_CLUSTERS"
              value: "${CIE_TARGET_IF1_CLUSTERS}"

  #
  # IF1 Release - automatically triggered from a successful release
  #
  # This pipeline is named with name instead of group, since it is referenced from a pipelineChain and there is
  # currently no way to reference a pipeline in pipelineChain via group, or with variable substitution.
  #
  - name: if1-release
    branchName: cie-cassandra-4.0.0
    trigger:
      # Only trigger by pipelineChain via release build
      gitPush: false
    machine:
      baseImage: docker.apple.com/piedb/parallelci:latest
    secrets:
      names:
        - rio-env-cassandra-connect.sh

    build:
      template: freestyle:v4:publish
      buildParameters:
        - parameter: CARNIVAL_APP_NAME
          description: >-
            App name for build submitted to Carnival in the release pipeline, under "Published Artifacts" - "Carnival".
            For example, if you see "cie-cassandra-four-zero-zero-twentyfive1BUILD1154" then use
            "four-zero-zero-twentyfive" for this value. Optional if CONTINUE_LOCAL_INSTALL_REQUEST_ID is provided.
        - parameter: CARNIVAL_BUILD_VERSION
          description: >-
            Build version for build submitted to Carnival in the release pipeline, under
            "Published Artifacts" - "Carnival". For example, if you see
            "cie-cassandra-four-zero-zero-twentyfive1BUILD1154" then use "1BUILD1154" for this value. Optional if
            CONTINUE_LOCAL_INSTALL_REQUEST_ID is provided.
        - parameter: GIT_COMMITTER_EMAIL
          description: >-
            Submit the local install workflow to Carnival on behalf of this user. Optional if
            CONTINUE_LOCAL_INSTALL_REQUEST_ID is provided.
        - parameter: CONTINUE_LOCAL_INSTALL_REQUEST_ID
          description: >-
            Set to a previous request ID (such as "1630649750900") if a previous pipeline run failed after submitting
            the local install workflow to Carnival. This will instruct the pipeline to continue from the Carnival local
            install status check. This can be useful in cases where the Carnival install was submitted, but could not
            complete in time due to Carnival issues. Leave empty to disable.
          defaultValue: ''
        - parameter: SKIP_TO_CONNECT_ROLLOUT
          description: >-
            Set to any value to skip all Carnival steps and go directly to Connect rollout. Leave empty to disable.
          defaultValue: ''
        - parameter: CIE_VERSION
          description: >-
            Cassandra version to deploy via Connect. If this pipeline is triggered normally (by successful completion of
            an upstream release pipeline run), this value comes from the CIE_VERSION file.
        - parameter: CIE_TARGET_IF1_CLUSTERS
          description: >-
            A list of appName/clusterName pairs (such as "dailydev40/dailydev40"), separated by spaces, in IF1 to
            rollout to. If this pipeline is triggered normally (by successful completion of an upstream release pipeline
            run), this value comes from the CIE_TARGET_IF1_CLUSTERS file.
      steps:
        - yum install -y python36 && python3 -m pip install --user requests==2.26.0 tzlocal==2.1
        - source $BUILD_SECRETS_PATH/rio-env-cassandra-connect.sh
        - python3 ./rio/if1_release.py
    timeout: 180
    finally:
      notify:
        <<: *notify

  #
  # Harry build - PRB
  #
  - group: ghprb-harry
    build:
      steps:
        - ./rio/run-harry-prb.sh
      template: freestyle:v4:prb
    timeout: 120
    reports:
      junit: false
    machine:
      baseImage: docker.apple.com/cpbuild/applejdk-8:latest
    finally:
      radar:
        annotate: false
      tag:
        enabled: false
    secrets:
      names:
        - rio-api-token
        - rio-test-user-email
    reports:
      junit:
        paths:
          - build/test/output/*
      logs:
        paths:
          - build/test/logs/**/*

  - group: ghprb-checkstyle
    jenkins:
      concurrentBuild: true
      throttlingEnabled: true
      maxConcurrentTotal: 2
    machine:
      baseImage: docker.apple.com/piedb/parallelci:latest
    secrets:
      names:
        - rio-env.sh
        - k8s_auth_token
        - k8s_auth_token.us-west-1a
        - mcqueen.yml
    build:
      template: freestyle:v4:prb
      steps:
        - ant checkstyle checkstyle-test
    timeout: 10
    finally:
      radar:
        annotate: false
      tag:
        enabled: false

  #
  # Publish in-JVM dtest jar and trigger Harry build using it
  #
  - group: publish-dtest-jar
    build:
      steps:
        - ./rio/release-dtest-jar.sh
      template: freestyle:v4:publish
    timeout: 30
    package:
      freeform:
        - publish:
            - repo: cie-release-local
    reports:
      junit: false
    machine:
      baseImage: docker.apple.com/cpbuild/applejdk-8:latest
    finally:
      radar:
        annotate: false
      tag:
        enabled: false
      pipelineChain:
        - project: pie-harry
          pipeline: run-build
          buildArguments:
            - name: CASSANDRA_VERSION
              value: "$(./rio/cie-version.sh)-${GIT_COMMIT_SHORT}"
            - name: DTEST_VERSION
              value: "$(./rio/dtest-version.sh)"
            - name: CASSANDRA_BRANCH
              value: "${GIT_BRANCH}"
            - name: HARRY_BRANCH
              value: "master"
            - name: DURATION_IN_MINUTES
              value: "30"
            - name: PARALLELISM
              value: "5"
            - name: COMPLETIONS
              value: "5"
